    # Sample ResourceBundle properties file  
      
    ### direct log messages to stdout ###  #### O primeiro appender escreve no console 
    log4j.appender.stdout=org.apache.log4j.ConsoleAppender  
    log4j.appender.stdout.Target=System.out  
    log4j.appender.stdout.layout=org.apache.log4j.PatternLayout  
    #log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n  
    log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n  
      
    ### set log levels - for more verbose logging change 'info' to 'debug' ###  
      
    log4j.rootLogger=debug, stdout  
      
    log4j.logger.org.hibernate=info  
    #log4j.logger.org.hibernate=debug  
      
    ### log HQL query parser activity  
    #log4j.logger.org.hibernate.hql.ast.AST=debug  
      
    ### log just the SQL  
    log4j.logger.org.hibernate.SQL=debug  
      
    ### log JDBC bind parameters ###  
    log4j.logger.org.hibernate.type=info  
      
    ### log schema export/update ###  
    log4j.logger.org.hibernate.tool.hbm2ddl=info  
      
    ### log HQL parse trees  
    #log4j.logger.org.hibernate.hql=debug  
      
    ### log cache activity ###  
    log4j.logger.org.hibernate.cache=info  
      
    ### log transaction activity  
    #log4j.logger.org.hibernate.transaction=debug  
      
    ### log JDBC resource acquisition  
    #log4j.logger.org.hibernate.jdbc=debug  
      
    ### enable the following line if you want to track down connection ###  
    ### leakages when using DriverManagerConnectionProvider ###  
    #log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace  
    
    
    
    
    # Usando 2 appenders, 1 para logar no console, outro para um arquivo  
    log4j.rootCategory=DEBUG, stdout, fileOut  
      
    # Imprime somente mensagens com 'priority' WARN ou mais alto para o logger  
    #lembrando a ordem: DEBUG - INFO - WARN - ERROR - FATAL  
    log4j.category.SEU.LOGGER.NAME=WARN  
      
    # Explicita a herança do nivel de prioridade  
    log4j.category.your.category.name=INHERITED  
      
    #### O primeiro appender escreve no console  
    #log4j.appender.stdout=org.apache.log4j.ConsoleAppender  
    #log4j.appender.stdout.layout=org.apache.log4j.PatternLayout  
      
    # Pattern que mostra o nome do arquivo e numero da linha.  
    #log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n  
      
    #### O segundo appender escreve em um arquivo  
    log4j.appender.fileOut =org.apache.log4j.RollingFileAppender  
    log4j.appender.fileOut.File=example.log  
      
    # Controla o tamanho maximo do arquivo  
    log4j.appender.fileOut.MaxFileSize=100KB  
      
    # Faz backup dos arquivos de log (apenas 1)  
    log4j.appender.fileOut.MaxBackupIndex=1  
      
    log4j.appender.fileOut.layout=org.apache.log4j.PatternLayout  
    log4j.appender.fileOut.layout.ConversionPattern=%p %t %c - %m%n  